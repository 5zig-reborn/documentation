{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"5zig Reborn","title":"5zig Reborn"},{"location":"#5zig-reborn","text":"","title":"5zig Reborn"},{"location":"Client_API/home/","text":"Introduction","title":"Introduction"},{"location":"Client_API/home/#introduction","text":"","title":"Introduction"},{"location":"Client_API/manifest/","text":"The Plugin Manifest In order for The 5zig Mod to recognize and load your plugin, you have to include a manifest inside the jar. This manifest must be named plugin.json and be a valid JSON file. Plugin Manifest Specification The manifest should be a dictionary with the following entries: Name Required? Type Description Example main Yes String The main class of the plugin com.example.ExamplePlugin name Only if you include updateUrl String The name of the plugin Example Plugin version Only if you include updateUrl String The version of the plugin 1.0.0 author No String The authors of the plugin John Doe, Jane Doe desc No String A brief description of the plugin An example plugin. license No String The license of the plugin MIT updateUrl No String A URL that will be used for automatic updates. Omitting this will disable that feature. See Automatic Updates https://example.com/update.json icon No String A URL pointing to a (preferably) 32x32 PNG icon. https://example.com/icon.png Putting all these values will result in: { main : com.example.ExamplePlugin , name : Example Plugin , version : 1.0.0 , author : John Doe, Jane Doe , desc : An example plugin. , license : MIT , updateUrl : https://example.com/update.json , icon : https://example.com/icon.png }","title":"The Plugin Manifest"},{"location":"Client_API/manifest/#the-plugin-manifest","text":"In order for The 5zig Mod to recognize and load your plugin, you have to include a manifest inside the jar. This manifest must be named plugin.json and be a valid JSON file.","title":"The Plugin Manifest"},{"location":"Client_API/manifest/#plugin-manifest-specification","text":"The manifest should be a dictionary with the following entries: Name Required? Type Description Example main Yes String The main class of the plugin com.example.ExamplePlugin name Only if you include updateUrl String The name of the plugin Example Plugin version Only if you include updateUrl String The version of the plugin 1.0.0 author No String The authors of the plugin John Doe, Jane Doe desc No String A brief description of the plugin An example plugin. license No String The license of the plugin MIT updateUrl No String A URL that will be used for automatic updates. Omitting this will disable that feature. See Automatic Updates https://example.com/update.json icon No String A URL pointing to a (preferably) 32x32 PNG icon. https://example.com/icon.png Putting all these values will result in: { main : com.example.ExamplePlugin , name : Example Plugin , version : 1.0.0 , author : John Doe, Jane Doe , desc : An example plugin. , license : MIT , updateUrl : https://example.com/update.json , icon : https://example.com/icon.png }","title":"Plugin Manifest Specification"},{"location":"Client_API/updates/","text":"Automatic Updates If you would like to make your plugin update automatically when a new release is available, you have to include an updateUrl in the plugin manifest . Warning Users can toggle auto-updating off, so keep in mind this won't always work. That URL should point to a valid JSON file with the following entries: Name Type Description Example latest String The latest version of the plugin 1.1.0 download String The download URL of the latest version https://example.com/latest.jar For example: { latest : 1.1.0 , download : https://example.com/latest.jar }","title":"Automatic Updates"},{"location":"Client_API/updates/#automatic-updates","text":"If you would like to make your plugin update automatically when a new release is available, you have to include an updateUrl in the plugin manifest . Warning Users can toggle auto-updating off, so keep in mind this won't always work. That URL should point to a valid JSON file with the following entries: Name Type Description Example latest String The latest version of the plugin 1.1.0 download String The download URL of the latest version https://example.com/latest.jar For example: { latest : 1.1.0 , download : https://example.com/latest.jar }","title":"Automatic Updates"},{"location":"Mod/chat-filter/","text":"Chat Filter Placeholders Chat Filter, Auto Text, and Auto Join Text support many different placeholders that are automatically evaluated by the mod. All placeholders have the ${placeholder} syntax. For example, the username placeholder would be ${username} . Here's a list: Player Coordinates Syntax : ${coords} User's coordinates, in the form of X, Y, Z . Player X Coordinate Syntax : ${coordX} Player Y Coordinate Syntax : ${coordY} Player Z Coordinate Syntax : ${coordZ} System Clipboard Syntax : ${clipboard} Acts as a normal paste action (Ctrl+V) Random entry in list Syntax : ${random[entries]} , example: ${random[\"Entry 1\", \"Entry 2\", \"Entry 3\"]} Selects a random entry from entries Current Server IP Syntax : ${server-ip} Current Server Lobby Syntax : ${server-lobby} Current Server Port Syntax : ${server-port} Time (HH:mm) Syntax : ${time-min} Time (HH:mm:ss) Syntax : ${time-sec} Player Username Syntax : ${username} Player UUID Syntax : ${uuid} User's UUID with dashes. Example: bba224a2-0bff-4913-b042-27ca3b60973f Player UUID, stripped Syntax : ${uuid-stripped} User's UUID without dashes. Example: bba224a20bff4913b04227ca3b60973f","title":"Chat Filter Placeholders"},{"location":"Mod/chat-filter/#chat-filter-placeholders","text":"Chat Filter, Auto Text, and Auto Join Text support many different placeholders that are automatically evaluated by the mod. All placeholders have the ${placeholder} syntax. For example, the username placeholder would be ${username} . Here's a list:","title":"Chat Filter Placeholders"},{"location":"Mod/chat-filter/#player-coordinates","text":"Syntax : ${coords} User's coordinates, in the form of X, Y, Z .","title":"Player Coordinates"},{"location":"Mod/chat-filter/#player-x-coordinate","text":"Syntax : ${coordX}","title":"Player X Coordinate"},{"location":"Mod/chat-filter/#player-y-coordinate","text":"Syntax : ${coordY}","title":"Player Y Coordinate"},{"location":"Mod/chat-filter/#player-z-coordinate","text":"Syntax : ${coordZ}","title":"Player Z Coordinate"},{"location":"Mod/chat-filter/#system-clipboard","text":"Syntax : ${clipboard} Acts as a normal paste action (Ctrl+V)","title":"System Clipboard"},{"location":"Mod/chat-filter/#random-entry-in-list","text":"Syntax : ${random[entries]} , example: ${random[\"Entry 1\", \"Entry 2\", \"Entry 3\"]} Selects a random entry from entries","title":"Random entry in list"},{"location":"Mod/chat-filter/#current-server-ip","text":"Syntax : ${server-ip}","title":"Current Server IP"},{"location":"Mod/chat-filter/#current-server-lobby","text":"Syntax : ${server-lobby}","title":"Current Server Lobby"},{"location":"Mod/chat-filter/#current-server-port","text":"Syntax : ${server-port}","title":"Current Server Port"},{"location":"Mod/chat-filter/#time-hhmm","text":"Syntax : ${time-min}","title":"Time (HH:mm)"},{"location":"Mod/chat-filter/#time-hh58mm58ss","text":"Syntax : ${time-sec}","title":"Time (HH:mm:ss)"},{"location":"Mod/chat-filter/#player-username","text":"Syntax : ${username}","title":"Player Username"},{"location":"Mod/chat-filter/#player-uuid","text":"Syntax : ${uuid} User's UUID with dashes. Example: bba224a2-0bff-4913-b042-27ca3b60973f","title":"Player UUID"},{"location":"Mod/chat-filter/#player-uuid-stripped","text":"Syntax : ${uuid-stripped} User's UUID without dashes. Example: bba224a20bff4913b04227ca3b60973f","title":"Player UUID, stripped"},{"location":"Mod/fabric/","text":"Fabric installation Official releases Every official release includes a pre-built Fabric jar in the downloads. Just drop that file into the Fabric mods folder. Unreleased versions First, grab the 5zig Fabric Patcher from here , and an up-to-date 5zig mod from here . Put both in the Fabric mods folder and start Minecraft. Warning If you have OptiFine or OptiFabric in your mods folder prior to installing the patcher, please remove them. You'll be able to add them once the installation is over. If everything went well, you should see a prompt to restart your game. The installer will automatically delete itself. You should now see a file ending with -Fabric.jar in your mods folder.","title":"Fabric installation"},{"location":"Mod/fabric/#fabric-installation","text":"","title":"Fabric installation"},{"location":"Mod/fabric/#official-releases","text":"Every official release includes a pre-built Fabric jar in the downloads. Just drop that file into the Fabric mods folder.","title":"Official releases"},{"location":"Mod/fabric/#unreleased-versions","text":"First, grab the 5zig Fabric Patcher from here , and an up-to-date 5zig mod from here . Put both in the Fabric mods folder and start Minecraft. Warning If you have OptiFine or OptiFabric in your mods folder prior to installing the patcher, please remove them. You'll be able to add them once the installation is over. If everything went well, you should see a prompt to restart your game. The installer will automatically delete itself. You should now see a file ending with -Fabric.jar in your mods folder.","title":"Unreleased versions"},{"location":"Mod/home/","text":"","title":"Home"},{"location":"Server_API/home/","text":"","title":"Home"}]}